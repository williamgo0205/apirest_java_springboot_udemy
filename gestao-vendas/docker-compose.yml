# Version Docker Compose
version: '3.8'

services:

## INICIO APP PARA SUBIR NO CONTAINER DOCKER
#  # Configuração do container do APP gestao_venda_app criado no arquivo Dockerfile
#  app:
#    build:
#      # Contexto da aplicacao. Nesse caso onde encontra-se o arquivo docker-compose.yml
#      # aqui está no mesmo diretorio e por esse motivo o contexto é "."
#      context: .
#      # o arquivo Dockerfile
#      dockerfile: Dockerfile
#    # Imagem
#    image: gestao-vendas_app:latest  
#    # Nome do container
#    container_name: gestao_venda_app
#    # Configuracao da porta de conexao
#    ports:
#      - 8080:8080
#     # Dependencias do container App
#    depends_on:
#      - mysql
#      - jaeger
#      - prometheus
#      - grafana
#    #comando para utilizar o arquivo wait-for-mysql.sh e assim que estiver ok o mysql 
#    # executa o java -jar /app/gestao-vendas.jar
#    command: ["-c", "/app/wait-for-mysql.sh mysql:3306 && java -jar /app/gestao-vendas.jar"] 
#    # entrypoint para executar o arquivo wait-for-mysql.sh
#    entrypoint: ["/bin/sh"]
## FINAL APP

  # Configuração MySql version
  mysql:
    # Imagem a ser baixada
    image: mysql:8.0.28
    # Nome do container
    container_name: mysql
    # Configuracao da porta de conexao
    ports:
      - 3306:3306
    environment:
      # Usuario da aplicacao
      MYSQL_USER: vendas
      MYSQL_PASSWORD: vendas
      # Usuario root
      MYSQL_ROOT_PASSWORD: root
      # Nome do banco de dados
      MYSQL_DATABASE: vendas_db

  # Configuração Jaeger - Monitoramento da aplicacao
  # rastreamento para aplicacoes microservico
  jaeger:
    # Imagem jaeger
    image: jaegertracing/all-in-one:1.31
    # Nome do container
    container_name: jaeger
    # Postas Configuradas
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14250:14250
      - 14268:14268
      - 14269:14269
      - 9411:9411

  # Configuração Prometheus Projeto
  # Obtenção de métricas no projeto de forma visual
  prometheus:
    # Imagem Prometheus
    image: prom/prometheus:v2.34.0-rc.2
    # Nome do container
    container_name: prometheus
    # Postas Configuradas
    ports: 
      - 9090:9090
    # Volume do container  
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    # Executa um comando na criação do container  
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  # Configuração Grafana
  # Obtenção de métricas no projeto de forma visual com dashboards
  grafana:
    # Imagem Grafana
    image: grafana/grafana:8.4.4
    # Nome do container
    container_name: grafana
    # Postas Configuradas
    ports: 
      - 3000:3000
